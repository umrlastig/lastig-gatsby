{"version":3,"file":"ee8b1517-41de2abbfb1f375fcaca.js","mappings":"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","sources":["webpack://lastig-gastby/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","radius","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BubbleController","points","point","iPixel","vPixel","skip","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","tickValue","generateTicks$1","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","registerables","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}