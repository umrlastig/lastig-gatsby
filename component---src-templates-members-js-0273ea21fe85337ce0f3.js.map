{"version":3,"file":"component---src-templates-members-js-0273ea21fe85337ce0f3.js","mappings":"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","sources":["webpack://lastig-gastby/./src/components/styles/Members.styled.js","webpack://lastig-gastby/./src/templates/members.js","webpack://lastig-gastby/./src/components/seo.js","webpack://lastig-gastby/./node_modules/react-intl/lib/src/components/message.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Members = styled.div`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  width: 80%;\n`;\n\nexport const StyledMember = styled.div`\n  img {\n    // width: 100%;\n    border-radius: 50% !important;\n    height: 100px;\n    width: 100px;\n  }\n`;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { LocalizedLink as Link } from \"@ericcote/gatsby-theme-i18n\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { Members, StyledMember } from \"../components/styles/Members.styled\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/seo\";\nimport { NavBar } from \"../components/NavBar\";\n\nconst modifyUrl = (url) => {\n  if (!url)\n    return \"https://www.umr-lastig.fr/lastig_data/img/abstract-user-icon.svg\";\n  if (url.startsWith(\"/\")) return \"https://www.umr-lastig.fr\" + url;\n  return url;\n};\n\nconst Member = ({ node }) => {\n  return (\n    <StyledMember key={node.id}>\n      <Link to={`/members/${node.firstname}-${node.lastname}`}>\n        <img\n          src={modifyUrl(node.photo)}\n          alt={`${node.firstname} ${node.lastname}`}\n        />\n        <h3>\n          {\" \"}\n          {node.firstname} {node.alt_firstname && `(${node.alt_firstname}) `}\n          {node.lastname}{\" \"}\n        </h3>\n        {/* <p>Started: {node.start_date}</p> */}\n      </Link>\n      <p> {node.status} </p>\n    </StyledMember>\n  );\n};\n\nexport default function MembersPage({ data, pageContext }) {\n  const isLastigPage = pageContext.team.length > 1;\n  const team = isLastigPage ? \"LASTIG\" : pageContext.team;\n  console.log(`Members PAGE : ${team} => ${isLastigPage}`);\n  const intl = useIntl();\n  function trans(text) {\n    return intl.formatMessage({ id: text });\n  }\n  const phD = data.allPeopleCsv.nodes.filter(\n    (node) => node.status === \"PhD student\" && node.member === \"true\",\n  );\n  const postDoc = data.allPeopleCsv.nodes.filter(\n    (node) =>\n      node.status === \"Post-doc\" &&\n      node.member === \"true\" &&\n      node.perm === \"false\",\n  );\n  const engineer = data.allPeopleCsv.nodes.filter(\n    (node) =>\n      node.status.toLowerCase().includes(\"engineer\") &&\n      node.member === \"true\" &&\n      node.perm === \"false\",\n  );\n  const alumni = data.allPeopleCsv.nodes.filter(\n    (node) => node.member === \"false\",\n  );\n  const permanent = data.allPeopleCsv.nodes.filter(\n    (node) =>\n      node.perm === \"true\" &&\n      node.status !== \"PhD student\" &&\n      node.member === \"true\",\n  );\n  return (\n    //`${isLastigPage ? 'LASTIG' : team} Members`\n    <Layout\n      pageTitle={<FormattedMessage id=\"members\" values={{ team: team }} />}\n    >\n      <h3>{<FormattedMessage id=\"members\" values={{ team: team }} />}</h3>\n      {!isLastigPage && (\n        <NavBar\n          title={team}\n          menus={data.site.siteMetadata.menus[team]}\n          team={team}\n        />\n      )}\n      <h4>{trans(\"Permanent staff\")}</h4>\n      <Members>{permanent.map((node) => Member((node = { node })))}</Members>\n      {phD.length > 0 && (\n        <>\n          <h4>{trans(\"PhD candidates\")}</h4>\n          <Members>{phD.map((node) => Member((node = { node })))}</Members>\n        </>\n      )}\n      {postDoc.length > 0 && (\n        <>\n          <h4>{trans(\"Post-docs\")}</h4>\n          <Members>{postDoc.map((node) => Member((node = { node })))}</Members>\n        </>\n      )}\n      {engineer.length > 0 && (\n        <>\n          <h4>{trans(\"Engineers\")}</h4>\n          <Members>{engineer.map((node) => Member((node = { node })))}</Members>\n        </>\n      )}\n      <h4>{trans(\"Alumni\")}</h4>\n      <Members>{alumni.map((node) => Member((node = { node })))}</Members>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query MembersQuery($team: [String]!) {\n    allPeopleCsv(filter: { teams: { in: $team } }) {\n      nodes {\n        HAL\n        end_date\n        firstname\n        alt_firstname\n        id\n        lastname\n        member\n        perm\n        photo\n        start_date\n        status\n        statut\n        teams\n        webpage\n      }\n    }\n    site {\n      siteMetadata {\n        menus {\n          ACTE {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          GEOVIS {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          MEIG {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          STRUDEL {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = ({ pageContext }) => (\n  <Seo\n    title={`${\n      pageContext.team.length > 1 ? \"LASTIG\" : pageContext.team\n    } Members`}\n  />\n);\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Seo = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <title>\n      {title} | {data.site.siteMetadata.title}\n    </title>\n  );\n};\n\nexport default Seo;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { shallowEqual } from '../utils';\nimport useIntl from './useIntl';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nfunction FormattedMessage(props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (typeof children === 'function') {\n        return children(Array.isArray(nodes) ? nodes : [nodes]);\n    }\n    if (Component) {\n        return React.createElement(Component, null, React.Children.toArray(nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}\nFormattedMessage.displayName = 'FormattedMessage';\nvar MemoizedFormattedMessage = React.memo(FormattedMessage, areEqual);\nMemoizedFormattedMessage.displayName = 'MemoizedFormattedMessage';\nexport default MemoizedFormattedMessage;\n"],"names":["Members","styled","div","withConfig","displayName","componentId","StyledMember","Member","_ref","node","React","key","id","Link","to","firstname","lastname","src","url","photo","startsWith","alt","alt_firstname","status","MembersPage","_ref2","data","pageContext","isLastigPage","team","length","console","log","intl","useIntl","trans","text","formatMessage","phD","allPeopleCsv","nodes","filter","member","postDoc","perm","engineer","toLowerCase","includes","alumni","permanent","Layout","pageTitle","FormattedMessage","values","NavBar","title","menus","site","siteMetadata","map","Head","_ref3","Seo","useStaticQuery","props","_a","textComponent","Text","description","defaultMessage","children","_b","tagName","Component","ignoreTag","Array","isArray","toArray","MemoizedFormattedMessage","prevProps","nextProps","otherProps","nextValues","nextOtherProps"],"sourceRoot":""}