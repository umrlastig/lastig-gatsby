{"version":3,"file":"component---src-templates-projects-js-207bb2b483cbfd091dfd.js","mappings":"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","sources":["webpack://lastig-gastby/./src/components/ProjectsPlot.js","webpack://lastig-gastby/./src/templates/projects.js"],"sourcesContent":["import * as Plot from \"@observablehq/plot\";\nimport React, { useEffect, useRef } from \"react\";\n\nexport default function ProjectsPlot({ options }) {\n  const containerRef = useRef();\n\n  useEffect(() => {\n    if (options == null) return;\n    const plot = Plot.plot(options);\n    containerRef.current.append(plot);\n    return () => plot.remove();\n  }, [options]);\n\n  return <div ref={containerRef} />;\n}\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/seo\";\nimport { theme } from \"../theme\";\nimport { useIntl } from \"react-intl\";\nimport { NavBar } from \"../components/NavBar\";\nimport ProjectsPlot from \"../components/ProjectsPlot\";\nimport * as Plot from \"@observablehq/plot\";\n\nexport default function ProjectsPage({ data, pageContext }) {\n  const team = pageContext.team;\n  const isLastigPage = team.length > 1;\n  console.log(`Project PAGE : ${team} => ${isLastigPage}`);\n  const intl = useIntl();\n  function trans(text) {\n    return intl.formatMessage({ id: text });\n  }\n  const colorDomain = [\n    \"H2020\",\n    \"ERA4CS\",\n    \"Horizon Europe\",\n    \"ENIAC\",\n    \"ANR\",\n    \"TOSCA\",\n    \"AID\",\n    \"iSite\",\n    \"PEPR\",\n    \"FUI\",\n    \"AAP Excellences\",\n    \"TIGA\",\n    \"PEPS\",\n    \"ACTE\",\n    \"GEOVIS\",\n    \"MEIG\",\n    \"STRUDEL\",\n  ];\n  const projects = data.allProjectsCsv.nodes\n    .map((node) => {\n      const dates = node.Dates.split(\"-\").map((d) => Number(d.trim()));\n      return {\n        long_name: node.Contract_Name,\n        name: node.Short_Name,\n        start_date: dates[0],\n        middle_date: (dates[1] + dates[0]) / 2.0,\n        end_date: dates[1],\n        theme: node.Theme,\n        duration: dates[1] - dates[0],\n        funding: node.Funding_Origin,\n        type: node.Contract_Type,\n        teams: node.Teams,\n        site: node.Website,\n      };\n    })\n    .filter(({ theme, type }) => theme && colorDomain.includes(type));\n  const first_date = Math.min(...projects.map((p) => p.start_date));\n  const last_date = Math.max(...projects.map((p) => p.end_date));\n  projects.sort(\n    (a, b) =>\n      a.theme.localeCompare(b.theme) ||\n      a.start_date - b.start_date ||\n      a.end_date - b.end_date ||\n      a.name.localeCompare(b.name),\n  );\n  const sorted_projects = projects.map((p, index) => {\n    return { index: index, ...p };\n  });\n  sorted_projects.forEach((p) =>\n    console.log(p.index, p.theme, p.start_date, p.end_date, p.name),\n  );\n  const teams = sorted_projects.flatMap((p) =>\n    p.teams.map((t, index) => ({\n      end_date: p.end_date,\n      team: t,\n      index: p.index,\n      dx: -(index + 1) * 10,\n    })),\n  );\n  const dxValues = [...new Set(teams.map((t) => t.dx))];\n  teams.forEach((p) => console.log(p.index, p.index, p.dx));\n  dxValues.forEach((dx) => console.log(dx));\n  const themes = [...new Set(sorted_projects.map((p) => p.theme))];\n  const sorted_themes = themes.map((t) => {\n    const theme_projects = sorted_projects.filter(({ theme }) => theme === t);\n    const first_index = Math.min(...theme_projects.map((p) => p.index));\n    const last_index = Math.max(...theme_projects.map((p) => p.index));\n    return {\n      theme: t,\n      start_date: first_date,\n      end_date: last_date,\n      index_1: first_index,\n      index_2: last_index,\n      index_middle: Math.round((first_index + last_index) / 2),\n    };\n  });\n  sorted_themes.forEach((t) =>\n    console.log(\n      t.theme,\n      t.start_date,\n      t.end_date,\n      t.index_1,\n      t.index_2,\n      t.index_middle,\n    ),\n  );\n  return (\n    <Layout pageTitle={`${isLastigPage ? \"LASTIG\" : team} Projects`}>\n      <h3>{trans(`${isLastigPage ? \"LASTIG\" : team} Projects`)}</h3>\n      {!isLastigPage && (\n        <NavBar\n          title={team}\n          menus={data.site.siteMetadata.menus[team]}\n          team={team}\n        />\n      )}\n      <div>\n        <ProjectsPlot\n          options={{\n            width: 1200,\n            x: { tickFormat: \"d\", axis: \"both\" },\n            // y: {tickSize: 0,label: null},\n            color: {\n              domain: colorDomain,\n              range: colorDomain.map((d) => theme.colors[d]),\n            },\n            marks: [\n              Plot.rect(sorted_themes, {\n                x1: \"start_date\",\n                x2: \"end_date\",\n                y1: \"index_1\",\n                y2: \"index_2\",\n                // stroke: \"red\",\n                rx: 5,\n                title: \"theme\",\n                fill: \"#fcf9f9ff\",\n              }),\n              Plot.rect(sorted_projects, {\n                x1: \"start_date\",\n                x2: \"end_date\",\n                y: \"index\",\n                rx: 5,\n                fill: \"type\",\n                tip: true,\n                href: (d) => d.site,\n              }),\n              Plot.text(sorted_projects, {\n                x: \"middle_date\",\n                y: \"index\",\n                text: (d) => d.name,\n                lineAnchor: \"middle\",\n                fontWeight: \"bold\",\n              }),\n              dxValues.map((value) =>\n                Plot.dot(\n                  teams.filter(({ dx }) => dx === value),\n                  {\n                    x: (t) => t.end_date,\n                    y: \"index\",\n                    dx: value,\n                    dy: -10,\n                    fill: \"team\",\n                  },\n                ),\n              ),\n              Plot.text(sorted_themes, {\n                x: \"start_date\",\n                y: \"index_middle\",\n                text: (d) => d.theme,\n                lineAnchor: \"middle\",\n                rotate: -90,\n                dx: 10,\n                fontWeight: \"bold\",\n              }),\n              Plot.axisY({ tickSize: 0, label: null, tickFormat: null }),\n            ],\n          }}\n        />\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query ($team: [String]) {\n    allProjectsCsv(filter: { Teams: { in: $team } }) {\n      nodes {\n        Contract_Name\n        Short_Name\n        Contract_Type\n        Dates\n        Funding_Origin\n        Project_Leader\n        Project_Team_Leader\n        Teams\n        Theme\n        id\n        Website\n      }\n    }\n    site {\n      siteMetadata {\n        menuLinks {\n          link\n          name\n          subMenu {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n        }\n        menus {\n          ACTE {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          GEOVIS {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          MEIG {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          STRUDEL {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = ({ pageContext }) => (\n  <Seo\n    title={`${\n      pageContext.team.length > 1 ? \"LASTIG\" : pageContext.team\n    } Projects`}\n  />\n);\n"],"names":["ProjectsPlot","_ref","options","containerRef","useRef","useEffect","plot","Plot","current","append","remove","React","ref","ProjectsPage","data","pageContext","team","isLastigPage","length","console","log","intl","useIntl","colorDomain","projects","allProjectsCsv","nodes","map","node","dates","Dates","split","d","Number","trim","long_name","Contract_Name","name","Short_Name","start_date","middle_date","end_date","theme","Theme","duration","funding","Funding_Origin","type","Contract_Type","teams","Teams","site","Website","filter","_ref2","includes","first_date","Math","min","apply","_toConsumableArray","p","last_date","max","sort","a","b","localeCompare","sorted_projects","index","forEach","flatMap","t","dx","dxValues","Set","sorted_themes","theme_projects","_ref3","first_index","last_index","index_1","index_2","index_middle","round","Layout","pageTitle","text","formatMessage","id","NavBar","title","menus","siteMetadata","width","x","tickFormat","axis","color","domain","range","colors","marks","x1","x2","y1","y2","rx","fill","y","tip","href","lineAnchor","fontWeight","value","_ref4","dy","rotate","tickSize","label","Head","_ref5","Seo"],"sourceRoot":""}