{"version":3,"file":"ee8b1517-5b1d613bae95b833041f.js","mappings":"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","sources":["webpack://lastig-gastby/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.3\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","l","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","BarController","categoryPercentage","barPercentage","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","DoughnutController","animateRotate","animateScale","cutout","rotation","circumference","radius","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","_getCircumference","_getRotationExtents","T","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","PolarAreaController","angleLines","display","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BubbleController","points","point","iPixel","vPixel","skip","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lineHeight","titleAlign","align","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaults","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","translate","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","tickValue","generateTicks$1","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","registerables","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}