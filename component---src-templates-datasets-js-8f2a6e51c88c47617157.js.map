{"version":3,"file":"component---src-templates-datasets-js-8f2a6e51c88c47617157.js","mappings":"gPAGA,MAAMA,EAAsB,QAC5B,SAASC,EAAaC,EAAKC,GACJ,mBAARD,EACPA,EAAIC,GACGD,IACPA,EAAIE,QAAUD,EAEtB,CAOA,SAASE,EAAUC,EAAaC,GAC5BD,EAAYE,OAASD,CACzB,CACA,SAASE,EAAYH,EAAaI,GAC9B,IAAIC,EAAeC,UAAUC,OAAS,QAAsB,IAAjBD,UAAU,GAAgBA,UAAU,GAAKZ,EACpF,MAAMc,EAAgB,GACtBR,EAAYS,SAAWL,EAAaM,KAAKC,IAErC,MAAMC,EAAiBZ,EAAYS,SAASI,MAAMC,GAAUA,EAAQT,KAAkBM,EAAYN,KAElG,OAAKO,GAAmBD,EAAYI,OAAQP,EAAcQ,SAASJ,IAKnEJ,EAAcS,KAAKL,GACnBM,OAAOC,OAAOP,EAAgBD,GACvBC,GANI,IACAD,EAKU,GAE7B,CACA,SAASS,EAAUL,GACf,IAAIV,EAAeC,UAAUC,OAAS,QAAsB,IAAjBD,UAAU,GAAgBA,UAAU,GAAKZ,EACpF,MAAM2B,EAAW,CACbnB,OAAQ,GACRO,SAAU,IAId,OAFAV,EAAUsB,EAAUN,EAAKb,QACzBC,EAAYkB,EAAUN,EAAKN,SAAUJ,GAC9BgB,CACX,CAgCA,SAASC,EAAeC,EAAO3B,GAC3B,MAAM,OAAE4B,EAAS,IAAG,MAAEC,EAAQ,IAAG,OAAEC,GAAS,EAAK,aAAErB,EAAY,KAAEsB,EAAI,KAAEZ,EAAI,QAAEa,EAAO,QAAEC,EAAU,GAAE,gBAAEC,EAAe,WAAEC,KAAeC,GAAgBT,EAC9IU,GAAY,IAAAC,QAAO,MACnBC,GAAW,IAAAD,QAAO,MAClBE,EAAc,KACXH,EAAUnC,UACfqC,EAASrC,QAAU,IAAI,KAAQmC,EAAUnC,QAAS,CAC9C6B,OACAZ,KAAMK,EAAUL,EAAMV,GACtBuB,QAASA,GAAW,IACbA,GAEPC,YAEJlC,EAAaC,EAAKuC,EAASrC,SAAQ,EAEjCuC,EAAe,KACjB1C,EAAaC,EAAK,MACduC,EAASrC,UACTqC,EAASrC,QAAQwC,UACjBH,EAASrC,QAAU,KACvB,EAoDJ,OAlDA,IAAAyC,YAAU,MACDb,GAAUS,EAASrC,SAAW8B,GA3F3C,SAAoBY,EAAOC,GACvB,MAAMb,EAAUY,EAAMZ,QAClBA,GAAWa,GACXvB,OAAOC,OAAOS,EAASa,EAE/B,CAuFYC,CAAWP,EAASrC,QAAS8B,EACjC,GACD,CACCF,EACAE,KAEJ,IAAAW,YAAU,MACDb,GAAUS,EAASrC,SACpBC,EAAUoC,EAASrC,QAAQ6C,OAAO5B,KAAMA,EAAKb,OACjD,GACD,CACCwB,EACAX,EAAKb,UAET,IAAAqC,YAAU,MACDb,GAAUS,EAASrC,SAAWiB,EAAKN,UACpCN,EAAYgC,EAASrC,QAAQ6C,OAAO5B,KAAMA,EAAKN,SAAUJ,EAC7D,GACD,CACCqB,EACAX,EAAKN,YAET,IAAA8B,YAAU,KACDJ,EAASrC,UACV4B,GACAW,IACAO,WAAWR,IAEXD,EAASrC,QAAQ+C,OAAOd,GAC5B,GACD,CACCL,EACAE,EACAb,EAAKb,OACLa,EAAKN,SACLsB,KAEJ,IAAAQ,YAAU,KACDJ,EAASrC,UACduC,IACAO,WAAWR,GAAY,GACxB,CACCT,KAEJ,IAAAY,YAAU,KACNH,IACO,IAAIC,MACZ,IACkB,gBAAoB,SAAU,CAC/CzC,IAAKqC,EACLa,KAAM,MACNtB,OAAQA,EACRC,MAAOA,KACJO,GACJF,EACP,CACA,MAAMiB,GAAsB,IAAAC,YAAW1B,GAEvC,SAAS2B,EAAiBtB,EAAMuB,GAE5B,OADA,KAAQC,SAASD,IACI,IAAAF,aAAW,CAACzB,EAAO3B,IAAoB,gBAAoBmD,EAAO,IAC5ExB,EACH3B,IAAKA,EACL+B,KAAMA,KAElB,CACA,MACMyB,EAAsBH,EAAiB,MAAO,MCjHpD,MAvDwBI,IAAoB,IAAnB,UAAEC,GAAWD,EACpC,OACEE,EAAAA,cAAA,OAAKC,UAAU,mBAEbD,EAAAA,cAACH,EAAG,CACFrC,KAAMuC,EACN1B,QAAS,CACPC,QAAS,CACP4B,MAAO,CACLC,SAAS,EACTC,KAAM,YAERC,OAAQ,CACNF,SAAS,IAGbG,OAAQ,CACNC,EAAG,CACDJ,SAAS,GAEXK,EAAG,CACDL,SAAS,EACT/B,KAAM,gBAGVqC,eAAgB,SAAUxB,GACxB,IAAImB,EAAO,GACXA,EAAK1C,KAAK,cAAgBuB,EAAMyB,GAAK,aACrC,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAMzB,KAAKN,SAASF,OAAQ2D,IAC9CP,EAAK1C,KACH,8DACEuB,EAAMzB,KAAKN,SAASyD,GAAGC,gBACvB,qCAGA3B,EAAMzB,KAAKN,SAASyD,GAAGE,OACzBT,EAAK1C,KACH,uBACEuB,EAAMzB,KAAKN,SAASyD,GAAGE,MACvB,WAINT,EAAK1C,KAAK,wCAKZ,OAFA0C,EAAK1C,KAAK,SAEH0C,EAAKU,KAAK,GACnB,KAGA,E,oBCpDH,MAAMC,EAAgBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,cAAVJ,CAAU,gHAQ1BK,EAAoBL,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,oCAAAC,YAAA,cAAVJ,CAAU,+IAErBlB,IAAA,IAAC,MAAEwB,EAAK,WAAEC,GAAYzB,EAAA,OAAKwB,EAAME,OAAOD,EAAW,IAU5DE,EAAcT,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,cAAVJ,CAAU,4GASxBU,EAAUV,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,cAAVJ,CAAU,iIAWpBW,EAAcX,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,cAAVJ,CAAU,8GAQxBY,EAAeZ,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,cAAVJ,CAAU,0GAEhBa,IAAA,IAAC,MAAEP,EAAK,WAAEC,GAAYM,EAAA,OAAKP,EAAME,OAAOD,EAAW,IAM5DO,EAAcd,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,cAAVJ,CAAU,+LAiBxBe,EAAYf,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,cAAVJ,CAAU,kIAUtBgB,EAAqBhB,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,cAAVJ,CAAU,+GAS/BiB,EAAqBjB,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,cAAVJ,CAAU,2DAGtBkB,IAAA,IAAC,MAAEZ,EAAK,WAAEC,GAAYW,EAAA,OAAKZ,EAAME,OAAOD,EAAW,I,0EClE1D,SAASY,EAAYrC,GAAyB,IAAxB,KAAEtC,EAAI,YAAE4E,GAAatC,EACxD,MAAMuC,EAAOD,EAAYC,KACnBC,EAAeD,EAAKrF,OAAS,EACnCuF,QAAQC,IAAI,kBAAkBH,QAAWC,KACzC,MAAMG,GAAOC,EAAAA,EAAAA,KACb,SAASC,EAAMvC,GACb,OAAOqC,EAAKG,cAAc,CAAElC,GAAIN,GAClC,CACc5C,EAAKqF,cAAcC,MAC3BC,MAAK,SAAUC,EAAGC,GACtB,OAAOA,EAAEC,UAAYF,EAAEE,SACzB,IACA,MAAM,EAACnD,IAAaoD,EAAAA,EAAAA,UAAS,CAC3BxG,OAAQa,EAAKqF,cAAcC,MAAM3F,KAAKiG,GAAS,GAAGA,EAAKC,eACvDnG,SAAU,CACR,CACE2D,MAAO,qBACPrD,KAAMA,EAAKqF,cAAcC,MAAM3F,KAAKiG,GAASA,EAAKF,YAClDtC,gBAAiBpD,EAAKqF,cAAcC,MAAM3F,KACvCiG,GAAS9B,EAAAA,EAAME,OAAO4B,EAAK9B,aAKpC,SAASgC,EAAOzB,GAAe,IAAd,QAAE0B,GAAS1B,EAC1B,OAAK0B,EAIHvD,EAAAA,cAAA,WAAK,YACMA,EAAAA,cAAA,SAAIuD,IAJRvD,EAAAA,cAAA,WAOX,CACA,SAASwD,EAAGtB,GAAW,IAAV,IAAEuB,GAAKvB,EAClB,OAAKuB,EAIHzD,EAAAA,cAAA,WACEA,EAAAA,cAAA,KAAG0D,KAAM,uBAAuBD,IAAO,aAAW,OAChDzD,EAAAA,cAAC2D,EAAAA,GAAI,CAACC,KAAK,kBAAkB1F,MAAM,QAAQD,OAAO,YAL/C+B,EAAAA,cAAA,WASX,CACA,SAAS6D,EAAKC,GAAa,IAAZ,MAAEC,GAAOD,EACtB,OAAKC,EAIH/D,EAAAA,cAAA,WAAK,YACMA,EAAAA,cAAA,SAAI+D,EAAMjD,KAAK,QAJnBd,EAAAA,cAAA,WAOX,CACA,SAASgE,EAAYC,GAAW,IAAV,IAAER,GAAKQ,EAC3B,IAAKR,EACH,OAAOzD,EAAAA,cAAA,YAET,MAAMkE,EAAe1G,EAAK2G,UAAUrB,MAAMsB,QACvCC,GACCA,EAAEC,cAAgBD,EAAEC,aAAaC,MAAMC,GAAUA,EAAM/G,SAASgG,OAEpE,OACEzD,EAAAA,cAAA,WACEA,EAAAA,cAACyE,EAAAA,EAAe,CAAC3B,MAAOoB,EAAc9F,KAAM,KAAMkD,MAAOA,EAAAA,IAG/D,CAEA,OACEtB,EAAAA,cAAC0E,EAAAA,EAAM,CAACC,UAAW,GAAGrC,EAAe,SAAWD,cAC9CrC,EAAAA,cAAA,UAAK2C,EAAM,GAAGL,EAAe,SAAWD,gBACtCC,GACAtC,EAAAA,cAAC4E,EAAAA,EAAM,CACL1E,MAAOmC,EACPwC,MAAOrH,EAAKsH,KAAKC,aAAaF,MAAMxC,GACpCA,KAAMA,IAGVrC,EAAAA,cAACgF,EAAAA,GAAa,KACZhF,EAAAA,cAACe,EAAa,KACX,CACC,cACA,oBACA,UACA,WACA,QACA,OACA,WACA,WACA5D,KAAK8H,GACLjF,EAAAA,cAACqB,EAAiB,CAACE,WAAY0D,GAC7BjF,EAAAA,cAAA,SAAIiF,OAIVjF,EAAAA,cAACkF,EAAQ,CAACnF,UAAWA,KAEvBC,EAAAA,cAACyB,EAAW,KACTjE,EAAKqF,cAAcC,MAAM3F,KAAKiG,GAC7BpD,EAAAA,cAAC0B,EAAO,CAACyD,IAAK/B,EAAK1C,IACjBV,EAAAA,cAAC2B,EAAW,CAACJ,WAAY6B,EAAK9B,OAC5BtB,EAAAA,cAACiC,EAAkB,KACjBjC,EAAAA,cAAA,WACEA,EAAAA,cAAA,KAAG0D,KAAMN,EAAKgC,KAAMhC,EAAKiC,OAE3BrF,EAAAA,cAACsF,EAAAA,EAAY,MACbtF,EAAAA,cAACwD,EAAG,CAACC,IAAKL,EAAKK,OAEjBzD,EAAAA,cAAC4B,EAAY,CAACL,WAAY6B,EAAK9B,OAAQ8B,EAAK9B,QAE9CtB,EAAAA,cAAC8B,EAAW,KACV9B,EAAAA,cAACgC,EAAkB,KACjBhC,EAAAA,cAACuF,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAASrC,EAAKoC,OACrBE,IAAKtC,EAAKC,cAIdrD,EAAAA,cAACsD,EAAO,CAACC,QAASH,EAAKG,UACvBvD,EAAAA,cAAC6D,EAAK,CAACE,MAAOX,EAAKW,QAEnB/D,EAAAA,cAAC+B,EAAS,KACPY,EAAM,cAAc,IAAC3C,EAAAA,cAAA,SAAIoD,EAAKF,aAGnClD,EAAAA,cAACgE,EAAY,CAACP,IAAKL,EAAKK,UAMpC,CAxIAjE,EAAAA,GAAMI,SAAS+F,EAAAA,IA0IR,MA0GMC,EAAOC,IAAA,IAAC,YAAEzD,GAAayD,EAAA,OAClC7F,EAAAA,cAAC8F,EAAAA,EAAG,CACF5F,MAAO,GACLkC,EAAYC,KAAKrF,OAAS,EAAI,SAAWoF,EAAYC,iBAEvD,C","sources":["webpack://lastig-gastby/./node_modules/react-chartjs-2/dist/index.js","webpack://lastig-gastby/./src/components/BarChart.js","webpack://lastig-gastby/./src/components/styles/Datasets.styled.js","webpack://lastig-gastby/./src/templates/datasets.js"],"sourcesContent":["import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import * as React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nexport const BarChart = ({ chartData }) => {\n  return (\n    <div className=\"chart-container\">\n      {/* <h2 style={{ textAlign: \"center\" }}>LASTIG Datasets</h2> */}\n      <Bar\n        data={chartData}\n        options={{\n          plugins: {\n            title: {\n              display: true,\n              text: \"Datasets\",\n            },\n            legend: {\n              display: false,\n            },\n          },\n          scales: {\n            x: {\n              display: true,\n            },\n            y: {\n              display: true,\n              type: \"logarithmic\",\n            },\n          },\n          legendCallback: function (chart) {\n            var text = [];\n            text.push('<ul class=\"' + chart.id + '-legend\">');\n            for (var i = 0; i < chart.data.datasets.length; i++) {\n              text.push(\n                '<li><div class=\"legendValue\"><span style=\"background-color:' +\n                  chart.data.datasets[i].backgroundColor +\n                  '\">&nbsp;&nbsp;&nbsp;&nbsp;</span>',\n              );\n\n              if (chart.data.datasets[i].label) {\n                text.push(\n                  '<span class=\"label\">' +\n                    chart.data.datasets[i].label +\n                    \"</span>\",\n                );\n              }\n\n              text.push('</div></li><div class=\"clear\"></div>');\n            }\n\n            text.push(\"</ul>\");\n\n            return text.join(\"\");\n          },\n        }}\n      />\n    </div>\n  );\n};\nexport default BarChart;\n","import styled from \"styled-components\";\n\nexport const DatasetLegend = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 1.5rem;\n  margin: 2rem;\n  text-decoration: none;\n  justify-content: space-between;\n`;\nexport const DatasetLegendItem = styled.div`\n  width: 200px;\n  background-color: ${({ theme, $dataTheme }) => theme.colors[$dataTheme]};\n  border-radius: 1rem;\n  padding: 1rem;\n<<<<<<< HEAD\n=======\n  text-align: center;\n  color: white;\n>>>>>>> origin/merged\n`;\n\nexport const DatasetList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  margin-top: 2rem;\n  margin-bottom: 2rem;\n  text-decoration: none;\n`;\n\nexport const Dataset = styled.div`\n  border-radius: 1rem;\n  border: 1px solid lightgrey;\n  padding: 1rem;\n  margin: auto;\n  width: 80%;\n  text-decoration: inherit;\n  margin-bottom: 5px;\n  //   background-color: #f6f6f6;\n`;\n\nexport const DatasetHead = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  text-decoration: inherit;\n  font-size: 1.25rem;\n`;\n\nexport const DatasetTheme = styled.div`\n  font-size: 0.9rem;\n  background-color: ${({ theme, $dataTheme }) => theme.colors[$dataTheme]};\n  border-radius: 1rem;\n  padding: 1rem;\n  translate: 0 -40px;\n  color: white;\n`;\nexport const DatasetInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  text-decoration: inherit;\n  height: 100px;\n  div {\n    text-decoration: inherit;\n    a {\n      text-decoration: inherit;\n    }\n  }\n  img {\n    object-position: left top;\n  }\n`;\n\nexport const Downloads = styled.div`\n  font-size: 1rem;\n  background-color: black;\n  color: white;\n  border-radius: 1rem;\n  padding: 1rem;\n  font-family: avenir, sans-serif;\n  height: 23px;\n`;\n\nexport const DatasetImageHolder = styled.div`\n  min-width: 200px;\n  max-width: 200px;\n  height: 100px;\n  object-position: left top;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const DatasetTitleHolder = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: ${({ theme, $dataTheme }) => theme.colors[$dataTheme]};\n`;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/seo\";\nimport Chart from \"chart.js/auto\";\nimport BarChart from \"../components/BarChart\";\nimport { useState } from \"react\";\nimport { CategoryScale } from \"chart.js\";\nimport { theme } from \"../theme\";\nimport {\n  DatasetLegend,\n  DatasetLegendItem,\n  DatasetList,\n  Dataset,\n  DatasetHead,\n  DatasetInfo,\n  Downloads,\n  DatasetImageHolder,\n  DatasetTitleHolder,\n  DatasetTheme,\n} from \"../components/styles/Datasets.styled\";\nimport { SpaceDivider } from \"../components/styles/Global\";\nimport { useIntl } from \"react-intl\";\nimport { Icon } from \"@iconify-icon/react\";\nimport { NavBar } from \"../components/NavBar\";\nimport { PublicationList } from \"../components/CreateNodes\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { TextContainer } from \"../components/styles/Container.styled\";\n\nChart.register(CategoryScale);\n\nexport default function DatasetsPage({ data, pageContext }) {\n  const team = pageContext.team;\n  const isLastigPage = team.length > 1;\n  console.log(`Dataset PAGE : ${team} => ${isLastigPage}`);\n  const intl = useIntl();\n  function trans(text) {\n    return intl.formatMessage({ id: text });\n  }\n  const nodes = data.allDatasetCsv.nodes;\n  nodes.sort(function (a, b) {\n    return b.downloads - a.downloads;\n  });\n  const [chartData] = useState({\n    labels: data.allDatasetCsv.nodes.map((node) => `${node.short_name}`),\n    datasets: [\n      {\n        label: \"Datasets downloads\",\n        data: data.allDatasetCsv.nodes.map((node) => node.downloads),\n        backgroundColor: data.allDatasetCsv.nodes.map(\n          (node) => theme.colors[node.theme],\n        ),\n      },\n    ],\n  });\n  function Project({ project }) {\n    if (!project) {\n      return <div></div>;\n    }\n    return (\n      <div>\n        Project: <b>{project}</b>\n      </div>\n    );\n  }\n  function Doi({ doi }) {\n    if (!doi) {\n      return <div></div>;\n    }\n    return (\n      <div>\n        <a href={`https://www.doi.org/${doi}`} aria-label=\"doi\">\n          <Icon icon=\"academicons:doi\" width=\"1.8em\" height=\"1.8em\" />\n        </a>\n      </div>\n    );\n  }\n  function Teams({ teams }) {\n    if (!teams) {\n      return <div></div>;\n    }\n    return (\n      <div>\n        Team(s): <b>{teams.join(\", \")}</b>\n      </div>\n    );\n  }\n  function Publications({ doi }) {\n    if (!doi) {\n      return <div></div>;\n    }\n    const publications = data.allHalCsv.nodes.filter(\n      (n) =>\n        n.researchData && n.researchData.some((rdata) => rdata.includes(doi)),\n    );\n    return (\n      <div>\n        <PublicationList nodes={publications} type={null} theme={theme} />\n      </div>\n    );\n  }\n\n  return (\n    <Layout pageTitle={`${isLastigPage ? \"LASTIG\" : team} Datasets`}>\n      <h3>{trans(`${isLastigPage ? \"LASTIG\" : team} Datasets`)}</h3>\n      {!isLastigPage && (\n        <NavBar\n          title={team}\n          menus={data.site.siteMetadata.menus[team]}\n          team={team}\n        />\n      )}\n      <TextContainer>\n        <DatasetLegend>\n          {[\n            \"Agriculture\",\n            \"DigitalHumanities\",\n            \"Tourism\",\n            \"Planning\",\n            \"Urban\",\n            \"LULC\",\n            \"Security\",\n            \"Climate\",\n          ].map((dataTheme) => (\n            <DatasetLegendItem $dataTheme={dataTheme}>\n              <b>{dataTheme}</b>\n            </DatasetLegendItem>\n          ))}\n        </DatasetLegend>\n        <BarChart chartData={chartData} />\n      </TextContainer>\n      <DatasetList>\n        {data.allDatasetCsv.nodes.map((node) => (\n          <Dataset key={node.id}>\n            <DatasetHead $dataTheme={node.theme}>\n              <DatasetTitleHolder>\n                <div>\n                  <a href={node.url}>{node.name}</a>\n                </div>\n                <SpaceDivider />\n                <Doi doi={node.doi} />\n              </DatasetTitleHolder>\n              <DatasetTheme $dataTheme={node.theme}>{node.theme}</DatasetTheme>\n            </DatasetHead>\n            <DatasetInfo>\n              <DatasetImageHolder>\n                <GatsbyImage\n                  image={getImage(node.image)}\n                  alt={node.short_name}\n                />\n              </DatasetImageHolder>\n\n              <Project project={node.project} />\n              <Teams teams={node.teams} />\n\n              <Downloads>\n                {trans(\"Downloads:\")} <b>{node.downloads}</b>\n              </Downloads>\n            </DatasetInfo>\n            <Publications doi={node.doi} />\n          </Dataset>\n        ))}\n      </DatasetList>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query ($team: [String]) {\n    allDatasetCsv(filter: { teams: { in: $team } }, sort: { downloads: DESC }) {\n      nodes {\n        downloads\n        doi\n        id\n        name\n        date\n        project\n        short_name\n        theme\n        url\n        teams\n        image {\n          childImageSharp {\n            gatsbyImageData(width: 200)\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        menuLinks {\n          link\n          name\n          subMenu {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n        }\n        menus {\n          ACTE {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          GEOVIS {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          MEIG {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n          STRUDEL {\n            link\n            name\n            subMenu {\n              link\n              name\n            }\n          }\n        }\n      }\n    }\n    allHalCsv {\n      nodes {\n        halId\n        id\n        citationRef\n        docType\n        fileMain\n        files\n        invitedCommunication\n        label_bibtex\n        popularLevel\n        proceedings\n        producedDate\n        title\n        authIdHalFullName {\n          fullName\n          idHal\n        }\n        peerReviewing\n        researchData\n        audience\n        doiId\n        softCodeRepository\n        arxivId\n        anrProjectTitle\n        europeanProjectTitle\n        publicationDate\n        teams\n        authors\n        keywords\n      }\n    }\n  }\n`;\n\nexport const Head = ({ pageContext }) => (\n  <Seo\n    title={`${\n      pageContext.team.length > 1 ? \"LASTIG\" : pageContext.team\n    } Datasets`}\n  />\n);\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","role","Chart","forwardRef","createTypedChart","registerables","register","Bar","_ref","chartData","React","className","title","display","text","legend","scales","x","y","legendCallback","id","i","backgroundColor","label","join","DatasetLegend","styled","div","withConfig","displayName","componentId","DatasetLegendItem","theme","$dataTheme","colors","DatasetList","Dataset","DatasetHead","DatasetTheme","_ref2","DatasetInfo","Downloads","DatasetImageHolder","DatasetTitleHolder","_ref3","DatasetsPage","pageContext","team","isLastigPage","console","log","intl","useIntl","trans","formatMessage","allDatasetCsv","nodes","sort","a","b","downloads","useState","node","short_name","Project","project","Doi","doi","href","Icon","icon","Teams","_ref4","teams","Publications","_ref5","publications","allHalCsv","filter","n","researchData","some","rdata","PublicationList","Layout","pageTitle","NavBar","menus","site","siteMetadata","TextContainer","dataTheme","BarChart","key","url","name","SpaceDivider","GatsbyImage","image","getImage","alt","CategoryScale","Head","_ref6","Seo"],"sourceRoot":""}